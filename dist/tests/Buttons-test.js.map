{"version":3,"sources":["../../src/tests/Buttons-test.js"],"names":["describe","it","buttons","add","text","url","phone","share","deepEqual","type","title","payload","toJSON","fail","e","ok","from","data","event"],"mappings":";;AAAA;;;;AACA;;;;AAEAA,SAAS,SAAT,EAAoB,YAAM;AACxBC,KAAG,SAAH,EAAc,YAAM;AAClB,QAAMC,UAAU,eAAhB;AACAA,YAAQC,GAAR,CAAY,EAAEC,MAAM,QAAR,EAAkBC,KAAK,mBAAvB,EAAZ;AACAH,YAAQC,GAAR,CAAY,EAAEC,MAAM,SAAR,EAAmBE,OAAO,eAA1B,EAAZ;AACAJ,YAAQC,GAAR,CAAY,EAAEI,OAAO,IAAT,EAAZ;;AAEA,qBAAOC,SAAP,CACE,CACE,EAAEC,MAAM,SAAR,EAAmBJ,KAAK,mBAAxB,EAA6CK,OAAO,QAApD,EADF,EAEE,EAAED,MAAM,cAAR,EAAwBC,OAAO,SAA/B,EAA0CC,SAAS,eAAnD,EAFF,EAGE,EAAEF,MAAM,eAAR,EAHF,CADF,EAMEP,QAAQU,MAAR,EANF;AAQD,GAdD;;AAgBAX,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,UAAU,eAAhB;AACAA,cAAQC,GAAR,CAAY,EAAZ;AACA,uBAAOU,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,uBAAOC,EAAP,CAAU,mCAAV;AACD;AACF,GARD;;AAUAd,KAAG,qBAAH,EAA0B,YAAM;AAC9B,QAAI;AACF,gBAAQe,IAAR,CAAa,CAAC,EAAEC,MAAM,EAAR,EAAYb,MAAM,KAAlB,EAAD,EAA4B,EAAEa,MAAM,EAAR,EAAYb,MAAM,KAAlB,EAA5B,CAAb;AACA,uBAAOW,EAAP,CAAU,kBAAV;AACD,KAHD,CAGE,OAAOD,CAAP,EAAU;AACV,uBAAOD,IAAP,CAAY,6BAAZ;AACD;AACF,GAPD;;AASAZ,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,UAAU,eAAhB;AACAA,cAAQC,GAAR,CAAY,EAAEe,OAAO,cAAT,EAAZ;AACA,uBAAOL,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,uBAAOC,EAAP,CAAU,mCAAV;AACD;AACF,GARD;AASD,CA7CD","file":"Buttons-test.js","sourcesContent":["import assert from \"assert\";\r\nimport { Buttons } from \"../..\";\r\n\r\ndescribe(\"Buttons\", () => {\r\n  it(\"#toJSON\", () => {\r\n    const buttons = new Buttons();\r\n    buttons.add({ text: \"Google\", url: \"http://google.com\" });\r\n    buttons.add({ text: \"Call us\", phone: \"+808 63718243\" });\r\n    buttons.add({ share: true });\r\n\r\n    assert.deepEqual(\r\n      [\r\n        { type: \"web_url\", url: \"http://google.com\", title: \"Google\" },\r\n        { type: \"phone_number\", title: \"Call us\", payload: \"+808 63718243\" },\r\n        { type: \"element_share\" }\r\n      ],\r\n      buttons.toJSON()\r\n    );\r\n  });\r\n\r\n  it(\"should throw an error\", () => {\r\n    try {\r\n      const buttons = new Buttons();\r\n      buttons.add({});\r\n      assert.fail(\"should have thrown an error\");\r\n    } catch (e) {\r\n      assert.ok(\"does not have data/url attributes\");\r\n    }\r\n  });\r\n\r\n  it(\"should parse object\", () => {\r\n    try {\r\n      Buttons.from([{ data: [], text: \"sup\" }, { data: [], text: \"cat\" }]);\r\n      assert.ok(\"parsed correctly\");\r\n    } catch (e) {\r\n      assert.fail(\"should have thrown an error\");\r\n    }\r\n  });\r\n\r\n  it(\"should throw an error\", () => {\r\n    try {\r\n      const buttons = new Buttons();\r\n      buttons.add({ event: \"simple-event\" });\r\n      assert.fail(\"should have thrown an error\");\r\n    } catch (e) {\r\n      assert.ok(\"does not have data/url attributes\");\r\n    }\r\n  });\r\n});\r\n"]}