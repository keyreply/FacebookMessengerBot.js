{"version":3,"sources":["../src/Buttons.js"],"names":["Buttons","buttons","_buttons","Array","isArray","forEach","add","button","data","url","event","phone","share","console","error","text","push","account_linking","linking","type","Error","title","messenger_extensions","webview_height_ratio","webview_share_button","payload","options","length","array","arg"],"mappings":"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","file":"Buttons.js","sourcesContent":["class Buttons {\r\n  constructor(buttons) {\r\n    this._buttons = [];\r\n\r\n    if (buttons != null) {\r\n      if (Array.isArray(buttons)) {\r\n        buttons.forEach(button => this.add(button));\r\n      } else {\r\n        this.add(buttons);\r\n      }\r\n    }\r\n  }\r\n\r\n  add(button) {\r\n    if (!button.data && !button.url && !button.event && !button.phone && !button.share) {\r\n      console.error(\"Must provide a url or data i.e. {data: null} or {url: 'https://facebook.com'}\");\r\n      return;\r\n    }\r\n    const _buttons = Object.assign({\r\n      text: button.text || \"Button\"\r\n    }, button)\r\n\r\n    this._buttons.push(_buttons);\r\n    return this;\r\n  }\r\n\r\n  toJSON() {\r\n    const buttons = [];\r\n    for (const button of this._buttons) {\r\n      if (button.account_linking) {\r\n        if (!button.account_linking.linking) {\r\n          buttons.push({ type: \"account_unlink\" });\r\n        } else if (button.url) {\r\n          buttons.push({ type: \"account_link\", url: button.url });\r\n        } else {\r\n          throw Error(\"Missing url for account linking\");\r\n        }\r\n      } else if (button.url) {\r\n        buttons.push({\r\n          type: \"web_url\",\r\n          url: button.url,\r\n          title: button.text,\r\n          messenger_extensions: button.messenger_extensions,\r\n          webview_height_ratio: button.webview_height_ratio || \"full\",\r\n          webview_share_button: button.webview_share_button\r\n        });\r\n      } else if (button.data != null) {\r\n        const payload = JSON.stringify({\r\n          data: button.data,\r\n          event: button.event\r\n        });\r\n        buttons.push({\r\n          type: \"postback\",\r\n          payload,\r\n          title: button.text,\r\n          options: button.options\r\n        });\r\n      } else if (button.share) {\r\n        buttons.push({ type: \"element_share\" });\r\n      } else if (button.phone) {\r\n        buttons.push({\r\n          type: \"phone_number\",\r\n          payload: button.phone,\r\n          title: button.text\r\n        });\r\n      }\r\n    }\r\n\r\n    return buttons;\r\n  }\r\n\r\n  static from(array) {\r\n    const buttons = new Buttons();\r\n    array.forEach(arg => buttons.add(arg));\r\n    return buttons;\r\n  }\r\n\r\n  get length() {\r\n    return this._buttons.length;\r\n  }\r\n}\r\n\r\nexport default Buttons;\r\n"]}