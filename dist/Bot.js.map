{"version":3,"sources":["../src/Bot.js"],"names":["time","setTimeout","resolve","wait","Elements","Buttons","QuickReplies","userCache","Bot","token","verification","debug","_tokens","_token","_debug","_verification","json","pageId","method","query","access_token","body","result","text","updateProfile","greeting","locale","fields","input","get_started","payload","data","action","persistent_menu","composer_input_disabled","call_to_actions","to","state","messagesApi","recipient","id","sender_action","post_id","comment_id","message","notification_type","tag","console","log","toJSON","err","JSON","parse","error","type","ee","Error","cache","key","props","fromCache","entry","standby","delivery","mids","emit","object","Array","isArray","changes","length","messaging","raw","sender","fetch","fetchUser","postback","e","isButton","hasOwnProperty","event","delivered","optin","param","ref","quick_reply","is_echo","isQuickReply","attachments","groupBy","file","files","map","a","url","image","images","video","videos","audio","location","coordinates","router","use","get","req","res","send","post","handleStandby","handleMessage","status"],"mappings":"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","file":"Bot.js","sourcesContent":["import EventEmitter from \"events\";\r\nimport bodyParser from \"body-parser\";\r\nimport { Router } from \"express\";\r\nimport Elements from \"./Elements.js\";\r\nimport Buttons from \"./Buttons.js\";\r\nimport QuickReplies from \"./QuickReplies.js\";\r\nimport fetch from \"./libs/fetch.js\";\r\nimport _ from \"lodash\";\r\n\r\nexport { Elements, Buttons, QuickReplies };\r\n\r\nconst userCache = {};\r\n\r\nexport async function wait(time) {\r\n  return new Promise(resolve => setTimeout(() => resolve(), time));\r\n}\r\n\r\nclass Bot extends EventEmitter {\r\n  static Buttons = Buttons;\r\n  static Elements = Elements;\r\n\r\n  static wait = wait;\r\n\r\n  constructor(token, verification, debug = false) {\r\n    super();\r\n    // support multiple tokens with backwards compatibility\r\n    if (typeof token === \"object\") {\r\n      this._tokens = token;\r\n    } else {\r\n      this._token = token;\r\n    }\r\n    this._debug = debug;\r\n    this._verification = verification;\r\n  }\r\n\r\n  async updateProfile(json, pageId, method = 'post') {\r\n    // support multiple tokens with backwards compatibility\r\n    if (pageId && this._tokens) {\r\n      this._token = this._tokens[pageId];\r\n    }\r\n\r\n    try {\r\n      const {\r\n        body: {result}\r\n      } = await fetch('https://graph.facebook.com/v8.0/me/messenger_profile', {\r\n        method,\r\n        json: true,\r\n        query: {access_token: this._token},\r\n        body: json\r\n      });\r\n\r\n      return result;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async setGreeting(text, pageId) {\r\n    // // support multiple tokens with backwards compatibility\r\n    // if (pageId && this._tokens) {\r\n    //   this._token = this._tokens[pageId];\r\n    // }\r\n\r\n    // if (pageId && this._tokens) {\r\n    //   this._token = this._tokens[pageId];\r\n    // }\r\n\r\n    // const {\r\n    //   body: { result }\r\n    // } = await fetch(\"https://graph.facebook.com/v2.6/me/thread_settings\", {\r\n    //   method: \"post\",\r\n    //   json: true,\r\n    //   query: { access_token: this._token },\r\n    //   body: { setting_type: \"greeting\", greeting: { text } }\r\n    // });\r\n\r\n    // return result;\r\n\r\n    try {\r\n      const result = await this.updateProfile(text ? {\r\n        greeting: [{\r\n          locale: 'default',\r\n          text\r\n        }]\r\n      } : {\r\n        fields: [\r\n          'greeting'\r\n        ]\r\n      }, pageId, text ? 'post' : 'delete');\r\n\r\n      return result;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async setGetStarted(input, pageId) {\r\n    // // support multiple tokens with backwards compatibility\r\n    // if (pageId && this._tokens) {\r\n    //   this._token = this._tokens[pageId];\r\n    // }\r\n\r\n    // if (!input) {\r\n    //   const {\r\n    //     body: { result }\r\n    //   } = await fetch(\"https://graph.facebook.com/v2.6/me/thread_settings\", {\r\n    //     method: \"delete\",\r\n    //     json: true,\r\n    //     query: { access_token: this._token },\r\n    //     body: {\r\n    //       setting_type: \"call_to_actions\",\r\n    //       thread_state: \"new_thread\"\r\n    //     }\r\n    //   });\r\n\r\n    //   return result;\r\n    // }\r\n\r\n    // const { data, event } = input;\r\n    // const {\r\n    //   body: { result }\r\n    // } = await fetch(\"https://graph.facebook.com/v2.6/me/thread_settings\", {\r\n    //   method: \"post\",\r\n    //   json: true,\r\n    //   query: { access_token: this._token },\r\n    //   body: {\r\n    //     setting_type: \"call_to_actions\",\r\n    //     thread_state: \"new_thread\",\r\n    //     call_to_actions: [{ payload: JSON.stringify({ data, event }) }]\r\n    //   }\r\n    // });\r\n\r\n    // return result;\r\n\r\n    try {\r\n      const result = await this.updateProfile(input ? {\r\n        get_started: {\r\n          payload: input.data.action\r\n        }\r\n      } : {\r\n        fields: [\r\n          'get_started'\r\n        ]\r\n      }, pageId, input ? 'post' : 'delete');\r\n\r\n      return result;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n\r\n  }\r\n\r\n  async setPersistentMenu(input, pageId) {\r\n    // // support multiple tokens with backwards compatibility\r\n    // if (pageId && this._tokens) {\r\n    //   this._token = this._tokens[pageId];\r\n    // }\r\n\r\n    // if (!input) {\r\n    //   const {\r\n    //     body: { result }\r\n    //   } = await fetch(\"https://graph.facebook.com/v2.6/me/thread_settings\", {\r\n    //     method: \"delete\",\r\n    //     json: true,\r\n    //     query: { access_token: this._token },\r\n    //     body: {\r\n    //       setting_type: \"call_to_actions\",\r\n    //       thread_state: \"existing_thread\"\r\n    //     }\r\n    //   });\r\n\r\n    //   return result;\r\n    // }\r\n\r\n    // const {\r\n    //   body: { result }\r\n    // } = await fetch(\"https://graph.facebook.com/v2.6/me/thread_settings\", {\r\n    //   method: \"post\",\r\n    //   json: true,\r\n    //   query: { access_token: this._token },\r\n    //   body: {\r\n    //     setting_type: \"call_to_actions\",\r\n    //     thread_state: \"existing_thread\",\r\n    //     call_to_actions: input\r\n    //   }\r\n    // });\r\n\r\n    // return result;\r\n\r\n    try {\r\n      const result = await this.updateProfile(input ? {\r\n        persistent_menu: [{\r\n          locale: 'default',\r\n          composer_input_disabled: false,\r\n          call_to_actions: input\r\n        }]\r\n      } : {\r\n        fields: [\r\n          'persistent_menu'\r\n        ]\r\n      }, pageId, input ? 'post' : 'delete');\r\n\r\n      return result;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async messagesApi(json, pageId, method = 'post') {\r\n    // support multiple tokens with backwards compatibility\r\n    if (pageId && this._tokens) {\r\n      this._token = this._tokens[pageId];\r\n    }\r\n\r\n    try {\r\n      const {\r\n        body: {result}\r\n      } = await fetch('https://graph.facebook.com/v8.0/me/messages', {\r\n        method,\r\n        json: true,\r\n        query: {access_token: this._token},\r\n        body: json\r\n      });\r\n\r\n      return result;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async setTyping(to, state, pageId) {\r\n    // // support multiple tokens with backwards compatibility\r\n    // if (pageId && this._tokens) {\r\n    //   this._token = this._tokens[pageId];\r\n    // }\r\n\r\n    // const action = state ? \"typing_on\" : \"typing_off\";\r\n\r\n    // const {\r\n    //   body: { result }\r\n    // } = await fetch(\"https://graph.facebook.com/v6.0/me/messages\", {\r\n    //   method: \"post\",\r\n    //   json: true,\r\n    //   query: { access_token: this._token },\r\n    //   body: { recipient: { id: to }, sender_action: action }\r\n    // });\r\n\r\n    // return result;\r\n\r\n    try {\r\n      const result = await this.messagesApi({\r\n        recipient: {\r\n          id: to\r\n        },\r\n        sender_action: state ? 'typing_on' : 'typing_off'\r\n      }, pageId);\r\n\r\n      return result;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async sendPrivateMessage(post_id, comment_id, message) {\r\n    // https://developers.facebook.com/docs/messenger-platform/discovery/private-replies\r\n\r\n    let recipient = {}\r\n    if(post_id){\r\n      Object.assign(recipient, {post_id})\r\n    }else if(comment_id){\r\n      Object.assign(recipient, {comment_id})\r\n    }else{\r\n      throw \"Please enter comment or post id\"\r\n    }\r\n    \r\n    try {\r\n      const result = await this.messagesApi({\r\n        recipient,\r\n        message\r\n      }, pageId);\r\n\r\n      return result;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async send(\r\n    to,\r\n    message,\r\n    notification_type = \"REGULAR\",\r\n    pageId,\r\n    tag = \"NON_PROMOTIONAL_SUBSCRIPTION\"\r\n  ) {\r\n    // // support multiple tokens with backwards compatibility\r\n    // if (pageId && this._tokens) {\r\n    //   this._token = this._tokens[pageId];\r\n    // }\r\n\r\n    if (this._debug) {\r\n      console.log({\r\n        recipient: { id: to },\r\n        message: message ? message.toJSON() : message,\r\n        notification_type,\r\n        tag\r\n      });\r\n    }\r\n\r\n    try {\r\n      // await fetch(\"https://graph.facebook.com/v6.0/me/messages\", {\r\n      //   method: \"post\",\r\n      //   json: true,\r\n      //   query: { access_token: this._token },\r\n      //   body: { recipient: { id: to }, message, notification_type, tag }\r\n      // });\r\n\r\n      await this.messagesApi({\r\n        recipient: {\r\n          id: to\r\n        },\r\n        message,\r\n        notification_type,\r\n        tag\r\n      }, pageId);\r\n    } catch (e) {\r\n      if (e.text) {\r\n        let text = e.text;\r\n        try {\r\n          const err = JSON.parse(e.text).error;\r\n          text = `${err.type || 'Unknown'}: ${err.message || 'No message'}`;\r\n        } catch (ee) {\r\n          // ignore\r\n        }\r\n\r\n        throw Error(text);\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetchUser(\r\n    id,\r\n    fields = \"first_name,last_name,profile_pic\",\r\n    cache = false,\r\n    pageId\r\n  ) {\r\n    // support multiple tokens with backwards compatibility\r\n    if (pageId && this._tokens) {\r\n      this._token = this._tokens[pageId];\r\n    }\r\n\r\n    const key = id + fields;\r\n    let props;\r\n\r\n    if (cache && userCache[key]) {\r\n      props = userCache[key];\r\n      props.fromCache = true;\r\n    } else {\r\n      const { body } = await fetch(`https://graph.facebook.com/v8.0/${id}`, {\r\n        query: { access_token: this._token, fields },\r\n        json: true\r\n      });\r\n\r\n      props = body;\r\n      props.fromCache = false;\r\n\r\n      if (cache) {\r\n        userCache[key] = props;\r\n      }\r\n    }\r\n\r\n    return props;\r\n  }\r\n\r\n  async handleStandby(input) {\r\n    const body = JSON.parse(JSON.stringify(input));\r\n    const message = body.entry[0].standby[0];\r\n\r\n    //filter for message_delivered events\r\n    if (message.delivery && message.delivery.mids && message.delivery.mids[0]) {\r\n      this.emit(\"standby\", message);\r\n    }\r\n  }\r\n\r\n  async handleMessage(input) {\r\n    const body = JSON.parse(JSON.stringify(input));\r\n    const entry = body.entry[0];\r\n    if (body.object === \"page\" && Array.isArray(entry.changes) && entry.changes.length > 0) {\r\n      return this.emit(\"page\", entry.changes, entry.id, entry.time);\r\n    }\r\n    const message = body.entry[0].messaging[0];\r\n\r\n    Object.assign(message, message.message);\r\n    delete message.message;\r\n\r\n    message.raw = input;\r\n\r\n    message.sender.fetch = async (fields, cache) => {\r\n      const props = await this.fetchUser(\r\n        message.sender.id,\r\n        fields,\r\n        cache,\r\n        message.recipient.id\r\n      );\r\n      Object.assign(message.sender, props);\r\n      return message.sender;\r\n    };\r\n\r\n    // POSTBACK\r\n    if (message.postback) {\r\n      let postback = {};\r\n\r\n      try {\r\n        postback = JSON.parse(message.postback.payload) || {};\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n      message.isButton = true;\r\n\r\n      if (postback.hasOwnProperty(\"data\")) {\r\n        //message.postback = postback;\r\n        message.data = postback.data;\r\n        message.event = postback.event;\r\n\r\n        this.emit(\"postback\", message.event, message, message.data);\r\n\r\n        if (postback.hasOwnProperty(\"event\")) {\r\n          this.emit(message.event, message, message.data);\r\n        }\r\n      } else {\r\n        this.emit(\"invalid-postback\", message, message.postback);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // DELIVERY\r\n    if (message.delivery) {\r\n      Object.assign(message, message.delivery);\r\n      message.delivered = message.delivery.mids;\r\n\r\n      delete message.delivery;\r\n\r\n      this.emit(\"delivery\", message, message.delivered);\r\n      return;\r\n    }\r\n\r\n    // OPTIN\r\n    if (message.optin) {\r\n      message.param = message.optin.ref || true;\r\n      message.optin = message.param;\r\n      this.emit(\"optin\", message, message.optin);\r\n      return;\r\n    }\r\n\r\n    // QUICK_REPLY\r\n    if (message.quick_reply && !message.is_echo) {\r\n      let postback = {};\r\n\r\n      try {\r\n        postback = JSON.parse(message.quick_reply.payload) || {};\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n\r\n      message.isQuickReply = true;\r\n\r\n      if (postback.hasOwnProperty(\"data\")) {\r\n        message.postback = postback;\r\n        message.data = postback.data;\r\n        message.event = postback.event;\r\n\r\n        this.emit(\"postback\", message.event, message, message.data);\r\n\r\n        if (postback.hasOwnProperty(\"event\")) {\r\n          this.emit(message.event, message, message.data);\r\n        }\r\n      } else {\r\n        this.emit(\"invalid-postback\", message, message.postback);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const attachments = _.groupBy(message.attachments, \"type\");\r\n\r\n    if (attachments.file) {\r\n      message.files = attachments.file.map(a => a.payload.url);\r\n    }\r\n\r\n    if (attachments.image) {\r\n      message.images = attachments.image.map(a => a.payload.url);\r\n    }\r\n\r\n    if (attachments.video) {\r\n      message.videos = attachments.video.map(a => a.payload.url);\r\n    }\r\n\r\n    if (attachments.audio) {\r\n      message.audio = attachments.audio.map(a => a.payload.url)[0];\r\n    }\r\n\r\n    if (attachments.location) {\r\n      const location = attachments.location[0];\r\n      message.location = { ...location, ...location.payload.coordinates };\r\n      delete message.location.payload;\r\n    }\r\n\r\n    message.object = body.object;\r\n\r\n    delete message.attachments;\r\n\r\n    this.emit(\"message\", message);\r\n  }\r\n\r\n  router() {\r\n    const router = new Router();\r\n\r\n    router.use(bodyParser.json());\r\n\r\n    router.get(\"/\", (req, res) => {\r\n      if (req.query[\"hub.verify_token\"] === this._verification) {\r\n        res.send(req.query[\"hub.challenge\"]);\r\n      } else {\r\n        res.send(\"Error, wrong validation token\");\r\n      }\r\n    });\r\n\r\n    router.post(\"/\", (req, res) => {\r\n      if (req.body.entry[0].standby) {\r\n        this.handleStandby(req.body);\r\n      } else {\r\n        this.handleMessage(req.body);\r\n      }\r\n      res.send().status(200);\r\n    });\r\n\r\n    return router;\r\n  }\r\n}\r\n\r\nexport { Bot };\r\n\r\nexport default Bot;\r\n"]}