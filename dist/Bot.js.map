{"version":3,"sources":["../src/Bot.js"],"names":["time","setTimeout","resolve","wait","Elements","Buttons","QuickReplies","userCache","Bot","token","verification","debug","_tokens","_token","_debug","_verification","json","pageId","method","query","access_token","body","result","text","updateProfile","greeting","locale","fields","input","get_started","payload","data","action","persistent_menu","composer_input_disabled","call_to_actions","to","state","messagesApi","recipient","id","sender_action","message","err","JSON","parse","error","type","ee","Error","notification_type","tag","console","log","toJSON","cache","key","props","fromCache","entry","standby","delivery","mids","emit","object","Array","isArray","changes","length","messaging","raw","sender","fetch","fetchUser","postback","e","isButton","hasOwnProperty","event","delivered","optin","param","ref","quick_reply","is_echo","isQuickReply","attachments","groupBy","file","files","map","a","url","image","images","video","videos","audio","location","coordinates","router","use","get","req","res","send","post","handleStandby","handleMessage","status"],"mappings":"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","file":"Bot.js","sourcesContent":["import EventEmitter from \"events\";\nimport bodyParser from \"body-parser\";\nimport { Router } from \"express\";\nimport Elements from \"./Elements.js\";\nimport Buttons from \"./Buttons.js\";\nimport QuickReplies from \"./QuickReplies.js\";\nimport fetch from \"./libs/fetch.js\";\nimport _ from \"lodash\";\n\nexport { Elements, Buttons, QuickReplies };\n\nconst userCache = {};\n\nexport async function wait(time) {\n  return new Promise(resolve => setTimeout(() => resolve(), time));\n}\n\nclass Bot extends EventEmitter {\n  static Buttons = Buttons;\n  static Elements = Elements;\n\n  static wait = wait;\n\n  constructor(token, verification, debug = false) {\n    super();\n    // support multiple tokens with backwards compatibility\n    if (typeof token === \"object\") {\n      this._tokens = token;\n    } else {\n      this._token = token;\n    }\n    this._debug = debug;\n    this._verification = verification;\n  }\n\n  async updateProfile(json, pageId, method = 'post') {\n    // support multiple tokens with backwards compatibility\n    if (pageId && this._tokens) {\n      this._token = this._tokens[pageId];\n    }\n\n    try {\n      const {\n        body: {result}\n      } = await fetch('https://graph.facebook.com/v6.0/me/messenger_profile', {\n        method,\n        json: true,\n        query: {access_token: this._token},\n        body: json\n      });\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async setGreeting(text, pageId) {\n    try {\n      const result = await this.updateProfile(text ? {\n        greeting: [{\n          locale: 'default',\n          text\n        }]\n      } : {\n        fields: [\n          'greeting'\n        ]\n      }, pageId, text ? 'post' : 'delete');\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async setGetStarted(input, pageId) {\n    try {\n      const result = await this.updateProfile(input ? {\n        get_started: {\n          payload: input.data.action\n        }\n      } : {\n        fields: [\n          'get_started'\n        ]\n      }, pageId, input ? 'post' : 'delete');\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async setPersistentMenu(input, pageId) {\n    try {\n      const result = await this.updateProfile(input ? {\n        persistent_menu: [{\n          locale: 'default',\n          composer_input_disabled: false,\n          call_to_actions: input\n        }]\n      } : {\n        fields: [\n          'persistent_menu'\n        ]\n      }, pageId, input ? 'post' : 'delete');\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async messagesApi(json, pageId, method = 'post') {\n    // support multiple tokens with backwards compatibility\n    if (pageId && this._tokens) {\n      this._token = this._tokens[pageId];\n    }\n\n    try {\n      const {\n        body: {result}\n      } = await fetch('https://graph.facebook.com/v6.0/me/messages', {\n        method,\n        json: true,\n        query: {access_token: this._token},\n        body: json\n      });\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async setTyping(to, state, pageId) {\n    try {\n      const result = await this.messagesApi({\n        recipient: {\n          id: to\n        },\n        sender_action: state ? 'typing_on' : 'typing_off'\n      }, pageId);\n\n      return result;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async sendPrivateMessage(id, message, pageId) {\n    try {\n      // support multiple tokens with backwards compatibility\n      if (pageId && this._tokens) {\n        this._token = this._tokens[pageId];\n      }\n      await fetch(`https://graph.facebook.com/v6.0/${id}/private_replies`, {\n        method: \"post\",\n        json: true,\n        query: { access_token: this._token },\n        body: { id, message }\n      });\n    } catch (e) {\n      if (e.text) {\n        let text = e.text;\n        try {\n          const err = JSON.parse(e.text).error;\n          text = `${err.type || \"Unknown\"}: ${err.message || \"No message\"}`;\n        } catch (ee) {\n          // ignore\n        }\n\n        throw Error(text);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async send(\n    to,\n    message,\n    notification_type = \"REGULAR\",\n    pageId,\n    tag = \"NON_PROMOTIONAL_SUBSCRIPTION\"\n  ) {\n    if (this._debug) {\n      console.log({\n        recipient: { id: to },\n        message: message ? message.toJSON() : message,\n        notification_type,\n        tag\n      });\n    }\n\n    try {\n      await this.messagesApi({\n        recipient: {\n          id: to\n        },\n        message,\n        notification_type,\n        tag\n      }, pageId);\n    } catch (e) {\n      if (e.text) {\n        let text = e.text;\n        try {\n          const err = JSON.parse(e.text).error;\n          text = `${err.type || 'Unknown'}: ${err.message || 'No message'}`;\n        } catch (ee) {\n          // ignore\n        }\n\n        throw Error(text);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async fetchUser(\n    id,\n    fields = \"first_name,last_name,profile_pic\",\n    cache = false,\n    pageId\n  ) {\n    // support multiple tokens with backwards compatibility\n    if (pageId && this._tokens) {\n      this._token = this._tokens[pageId];\n    }\n\n    const key = id + fields;\n    let props;\n\n    if (cache && userCache[key]) {\n      props = userCache[key];\n      props.fromCache = true;\n    } else {\n      const { body } = await fetch(`https://graph.facebook.com/v6.0/${id}`, {\n        query: { access_token: this._token, fields },\n        json: true\n      });\n\n      props = body;\n      props.fromCache = false;\n\n      if (cache) {\n        userCache[key] = props;\n      }\n    }\n\n    return props;\n  }\n\n  async handleStandby(input) {\n    const body = JSON.parse(JSON.stringify(input));\n    const message = body.entry[0].standby[0];\n\n    //filter for message_delivered events\n    if (message.delivery && message.delivery.mids && message.delivery.mids[0]) {\n      this.emit(\"standby\", message);\n    }\n  }\n\n  async handleMessage(input) {\n    const body = JSON.parse(JSON.stringify(input));\n    const entry = body.entry[0];\n    if (body.object === \"page\" && Array.isArray(entry.changes) && entry.changes.length > 0) {\n      return this.emit(\"page\", entry.changes, entry.id, entry.time);\n    }\n    const message = body.entry[0].messaging[0];\n\n    Object.assign(message, message.message);\n    delete message.message;\n\n    message.raw = input;\n\n    message.sender.fetch = async (fields, cache) => {\n      const props = await this.fetchUser(\n        message.sender.id,\n        fields,\n        cache,\n        message.recipient.id\n      );\n      Object.assign(message.sender, props);\n      return message.sender;\n    };\n\n    // POSTBACK\n    if (message.postback) {\n      let postback = {};\n\n      try {\n        postback = JSON.parse(message.postback.payload) || {};\n      } catch (e) {\n        // ignore\n      }\n      message.isButton = true;\n\n      if (postback.hasOwnProperty(\"data\")) {\n        //message.postback = postback;\n        message.data = postback.data;\n        message.event = postback.event;\n\n        this.emit(\"postback\", message.event, message, message.data);\n\n        if (postback.hasOwnProperty(\"event\")) {\n          this.emit(message.event, message, message.data);\n        }\n      } else {\n        this.emit(\"invalid-postback\", message, message.postback);\n      }\n\n      return;\n    }\n\n    // DELIVERY\n    if (message.delivery) {\n      Object.assign(message, message.delivery);\n      message.delivered = message.delivery.mids;\n\n      delete message.delivery;\n\n      this.emit(\"delivery\", message, message.delivered);\n      return;\n    }\n\n    // OPTIN\n    if (message.optin) {\n      message.param = message.optin.ref || true;\n      message.optin = message.param;\n      this.emit(\"optin\", message, message.optin);\n      return;\n    }\n\n    // QUICK_REPLY\n    if (message.quick_reply && !message.is_echo) {\n      let postback = {};\n\n      try {\n        postback = JSON.parse(message.quick_reply.payload) || {};\n      } catch (e) {\n        // ignore\n      }\n\n      message.isQuickReply = true;\n\n      if (postback.hasOwnProperty(\"data\")) {\n        message.postback = postback;\n        message.data = postback.data;\n        message.event = postback.event;\n\n        this.emit(\"postback\", message.event, message, message.data);\n\n        if (postback.hasOwnProperty(\"event\")) {\n          this.emit(message.event, message, message.data);\n        }\n      } else {\n        this.emit(\"invalid-postback\", message, message.postback);\n      }\n\n      return;\n    }\n\n    const attachments = _.groupBy(message.attachments, \"type\");\n\n    if (attachments.file) {\n      message.files = attachments.file.map(a => a.payload.url);\n    }\n\n    if (attachments.image) {\n      message.images = attachments.image.map(a => a.payload.url);\n    }\n\n    if (attachments.video) {\n      message.videos = attachments.video.map(a => a.payload.url);\n    }\n\n    if (attachments.audio) {\n      message.audio = attachments.audio.map(a => a.payload.url)[0];\n    }\n\n    if (attachments.location) {\n      const location = attachments.location[0];\n      message.location = { ...location, ...location.payload.coordinates };\n      delete message.location.payload;\n    }\n\n    message.object = body.object;\n\n    delete message.attachments;\n\n    this.emit(\"message\", message);\n  }\n\n  router() {\n    const router = new Router();\n\n    router.use(bodyParser.json());\n\n    router.get(\"/\", (req, res) => {\n      if (req.query[\"hub.verify_token\"] === this._verification) {\n        res.send(req.query[\"hub.challenge\"]);\n      } else {\n        res.send(\"Error, wrong validation token\");\n      }\n    });\n\n    router.post(\"/\", (req, res) => {\n      if (req.body.entry[0].standby) {\n        this.handleStandby(req.body);\n      } else {\n        this.handleMessage(req.body);\n      }\n      res.send().status(200);\n    });\n\n    return router;\n  }\n}\n\nexport { Bot };\n\nexport default Bot;\n"]}